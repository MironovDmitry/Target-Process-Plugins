<#@ template hostspecific="true" #>
<#@ include file="HbmModel.ttinclude"#>
<#@ include file="Manager.ttinclude"#>

<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".empty.generated.cs" #>

<# 
model = new Model(Host);
manager = Manager.Create(Host, GenerationEnvironment);
manager.StartHeader();
#>
// 
// THIS FILE IS AUTOGENERATED! ANY MANUAL MODIFICATIONS WILL BE LOST!
//

using System;
using Tp.Integration.Common;

namespace Tp.Integration.Messages.EntityLifecycle.Messages
{
<# manager.EndBlock(); #>
<# manager.StartFooter(); #>
}
<# manager.EndBlock();#>


<#
	ProcessEntities();
	manager.Process(true);
#>

<#+
	private void ProcessEntities()
	{
		var entities = model.GetEntities().Where(t => t.Name != "TestCaseTestPlan");

		foreach (var r in entities)
		{
			manager.StartNewFile(r.Name +".generated.cs");
			var entityName = r.Name;
			
#>
	[Serializable]
	public class <#=entityName#>CreatedMessage : EntityCreatedMessage<<#=entityName#>DTO>, ISagaMessage
	{
	}

	[Serializable]
	public class <#=entityName#>DeletedMessage : EntityDeletedMessage<<#=entityName#>DTO>, ISagaMessage
	{
	}

	[Serializable]
	public class <#=entityName#>UpdatedMessage : EntityUpdatedMessage<<#=entityName#>DTO, <#=entityName#>Field>, ISagaMessage
	{
		
	}

<#+			manager.EndBlock();
		}
	}
#>
<#+ 
	Manager manager;
	Model model;
#>