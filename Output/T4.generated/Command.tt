<#@ template hostspecific="true" #>
<#@ include file="HbmModel.ttinclude"#>
<#@ include file="Manager.ttinclude"#>

<#@ assembly name="System.Core" #>
<#@ output extension=".empty.generated.cs" #>

<#
	model = new Model(Host);
	manager = Manager.Create(Host, GenerationEnvironment);
	manager.StartHeader();
#>
// 
// THIS FILE IS AUTOGENERATED! ANY MANUAL MODIFICATIONS WILL BE LOST!
//

using System;
using Tp.Integration.Common;

namespace Tp.Integration.Messages.EntityLifecycle.Commands
{
<# manager.EndBlock(); #>
<# manager.StartFooter(); #>
}
<# manager.EndBlock(); #>


<#
	ProcessEntities();
	manager.Process(true);
#>

<#+
	private void ProcessEntities()
	{
		var entities = model.GetEntities().Where(e => e.Name != "Message");

		foreach (var r in entities)
		{
			manager.StartNewFile(r.Name + ".generated.cs");
			var entityName = r.Name;
#>
	[Serializable]
	public class Create<#=entityName #>Command : CreateEntityCommand<<#=entityName #>DTO>
	{
		public Create<#=entityName #>Command(<#=entityName #>DTO dto) : base(dto)
		{
		}
	}

	[Serializable]
	public class Update<#=entityName #>Command : UpdateEntityCommand<<#=entityName #>DTO>
	{
		public Update<#=entityName #>Command(<#=entityName #>DTO dto) : base(dto)
		{
		}

		public Update<#=entityName #>Command(<#=entityName #>DTO dto, Enum[] changedFields) : base(dto, changedFields)
		{
		}
	}

	[Serializable]
	public class Delete<#=entityName #>Command : DeleteEntityCommand<<#=entityName #>DTO>
	{
		public Delete<#=entityName #>Command(int id) : base(id)
		{
		}
	}

<#+ manager.EndBlock();
		}
	}
#>
<#+
	Manager manager;
	Model model;
#>